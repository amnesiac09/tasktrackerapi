{
	"info": {
		"_postman_id": "41a59e49-41b7-460e-95d5-fb966d3f2c0a",
		"name": "Task Tracker API",
		"description": "Complete API collection for Task Tracker application with role-based access control",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24982632"
	},
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Register Admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@test.com\",\n  \"password\": \"password\",\n  \"role\": \"ADMIN\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Manager",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"manager@test.com\",\n  \"password\": \"password\",\n  \"role\": \"MANAGER\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user@test.com\",\n  \"password\": \"password\",\n  \"role\": \"USER\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('adminToken', response.token);",
									"    console.log('Admin token saved:', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@test.com\",\n  \"password\": \"password\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('managerToken', response.token);",
									"    console.log('Manager token saved:', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"manager1@test.com\",\n  \"password\": \"password\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('userToken', response.token);",
									"    console.log('User token saved:', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user1@test.com\",\n  \"password\": \"password\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üìã Projects",
			"item": [
				{
					"name": "Get All Projects (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Projects (Manager)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{managerToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Project by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{managerToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Project (Manager)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{managerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"New Test Project\",\n  \"description\": \"Testing project creation via Postman\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Project",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{managerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Project Name\",\n  \"description\": \"Updated project description\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/projects/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Project (Admin)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "‚ùå Create Project (User) - Should Fail",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Unauthorized Project\",\n  \"description\": \"This should fail with 403\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üìù Tasks",
			"item": [
				{
					"name": "Get Tasks by Project",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{managerToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/project/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"project",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tasks by Project (with Status Filter)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{managerToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/project/1?status=TODO",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"project",
								"1"
							],
							"query": [
								{
									"key": "status",
									"value": "TODO"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tasks by Project (with Priority Filter)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{managerToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/project/1?priority=HIGH",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"project",
								"1"
							],
							"query": [
								{
									"key": "priority",
									"value": "HIGH"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tasks (Paginated & Sorted)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{managerToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/project/1?page=0&size=3&sort=title,asc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"project",
								"1"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "3"
								},
								{
									"key": "sort",
									"value": "title,asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{managerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"New Test Task\",\n  \"description\": \"Testing task creation via Postman\",\n  \"projectId\": 1,\n  \"assignedUserId\": 4,\n  \"status\": \"TODO\",\n  \"priority\": \"HIGH\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Task",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{managerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated Task Title\",\n  \"description\": \"Updated task description\",\n  \"status\": \"IN_PROGRESS\",\n  \"priority\": \"MEDIUM\",\n  \"assignedUserId\": 5\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tasks/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign Task to User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{managerToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/3/assign/5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"3",
								"assign",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Task Status (User)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/1/status?status=DONE",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"1",
								"status"
							],
							"query": [
								{
									"key": "status",
									"value": "DONE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get My Assigned Tasks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/my-tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"my-tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tasks by Assigned User (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/user/4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"user",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{managerToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"10"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üö´ Error Testing",
			"item": [
				{
					"name": "‚ùå Invalid Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"invalid@test.com\",\n  \"password\": \"wrongpassword\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "‚ùå Access Without Token",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "‚ùå Resource Not Found",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"999"
							]
						}
					},
					"response": []
				},
				{
					"name": "‚ùå Invalid Task Creation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{managerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"\",\n  \"description\": \"Missing required fields\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{adminToken}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080/api",
			"type": "string"
		}
	]
}